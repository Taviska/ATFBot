const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();
const admin = require("firebase-admin");

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
const serviceAccount = require("./serviceAccountKey.json");

admin.initializeApp({
    credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

const TOKEN = process.env.BOT_TOKEN;
const bot = new TelegramBot(TOKEN, { polling: true });

bot.onText(/\/start (.+)/, async (msg, match) => {
    const chatId = msg.chat.id.toString(); // ID –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const referrerId = match[1]; // ID –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ

    if (referrerId !== chatId) {
        try {
            const referrerRef = db.collection("players").doc(referrerId);
            const userRef = db.collection("players").doc(chatId);

            const referrerSnap = await referrerRef.get();
            const userSnap = await userRef.get();

            let userData = userSnap.exists ? userSnap.data() : {};
            let referrerData = referrerSnap.exists ? referrerSnap.data() : {};

            if (!userData.referredBy) {
                await userRef.set({
                    coins: (userData.coins || 0) + 50000,
                    referredBy: referrerId
                }, { merge: true });

                let invitedUsers = referrerData.invitedUsers || [];
                if (!invitedUsers.includes(chatId)) {
                    invitedUsers.push(chatId);
                    await referrerRef.set({
                        coins: (referrerData.coins || 0) + 100000,
                        invitedUsers: invitedUsers
                    }, { merge: true });
                }

                bot.sendMessage(chatId, `üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ 50.000 –º–æ–Ω–µ—Ç –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ.`);
                bot.sendMessage(referrerId, `üéâ –í–∞—à –¥—Ä—É–≥ –ø—Ä–∏–Ω—è–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ! –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 100.000 –º–æ–Ω–µ—Ç.`);
            } else {
                bot.sendMessage(chatId, "–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.");
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:", error);
            bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞.");
        }
    } else {
        bot.sendMessage(chatId, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ—é –∂–µ —Å—Å—ã–ª–∫—É üòÖ");
    }
});


bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    if (msg.text === "/start") {
        bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π.");
    }
});

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");
